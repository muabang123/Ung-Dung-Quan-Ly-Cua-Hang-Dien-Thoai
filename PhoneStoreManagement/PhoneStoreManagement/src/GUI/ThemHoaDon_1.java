/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import javax.swing.*;
import java.io.File;
import java.text.DecimalFormat;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Iterator;
import DTO.SanPhamDTO;
import BUS.SanPhamBUS;
import DAO.PhieuNhapDAO;
import DTO.PhieuNhapDTO;
import DAO.ChiTietPhieuNhapDAO;
import DTO.ChiTietPhieuNhapDTO;
import DAO.SanPhamDAO;
import DAO.ChiTietSanPhamDAO;
import DTO.ChiTietPhieuNhapDTO;
import BUS.ChiTietSanPhamBUS;
import BUS.KhachHangBUS;
import DAO.ChiTietHoaDonDAO;
import DTO.ChiTietSanPhamDTO;
import DAO.ChiTietSanPhamDAO;
import DAO.HoaDonDAO;
import DTO.ChiTietHoaDonDTO;
import DTO.HoaDonDTO;
import DTO.KhachHangDTO;
import java.awt.BorderLayout;
import java.awt.Color;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author minhminh
 */
public class ThemHoaDon_1 extends javax.swing.JFrame {

    /**
     * Creates new form ThemPhieuNhap
     */
    public ThemHoaDon_1() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        loadProductTable();
        autoGenerateMaPhieuNhap();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        JPannelThemPhieuNhap = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 255));

        JPannelThemPhieuNhap.setBackground(new java.awt.Color(102, 102, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(242, 242, 242));
        jLabel1.setText("Thêm Hóa Đơn");
        jLabel1.setMaximumSize(new java.awt.Dimension(92, 40));
        jLabel1.setMinimumSize(new java.awt.Dimension(92, 40));

        javax.swing.GroupLayout JPannelThemPhieuNhapLayout = new javax.swing.GroupLayout(JPannelThemPhieuNhap);
        JPannelThemPhieuNhap.setLayout(JPannelThemPhieuNhapLayout);
        JPannelThemPhieuNhapLayout.setHorizontalGroup(
            JPannelThemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPannelThemPhieuNhapLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(375, 375, 375))
        );
        JPannelThemPhieuNhapLayout.setVerticalGroup(
            JPannelThemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPannelThemPhieuNhapLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(204, 204, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Số lượng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(204, 204, 255));
        jScrollPane1.setViewportView(jTable1);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt); // Gọi phương thức xử lý sự kiện khi click vào bảng
            }
        });
        jTable1.setDefaultEditor(Object.class, null);

        jButton1.setBackground(new java.awt.Color(0, 204, 255));
        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Thêm sản phẩm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 255, 0));
        jButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Nhập Excel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Mã sản phẩm");

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(204, 204, 204));
        jTextField2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Tên sản phẩm");

        jTextField3.setEditable(false);
        jTextField3.setBackground(new java.awt.Color(204, 204, 204));
        jTextField3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Mã Hóa Đơn");

        jTextField6.setEditable(false);
        jTextField6.setBackground(new java.awt.Color(204, 204, 204));
        jTextField6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Nhân viên nhập");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Mã khách hàng");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("TỔNG TIỀN:");

        jTextField8.setEditable(false);
        jTextField8.setBackground(new java.awt.Color(204, 255, 255));
        jTextField8.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jTextField8.setBorder(null);

        jButton3.setBackground(new java.awt.Color(255, 51, 0));
        jButton3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton3.setText("Xuất Hóa Đơn");

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "admin1", "admin2" }));

        jLabel16.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("TỔNG PHẢI TRẢ: ");

        jTextField11.setEditable(false);
        jTextField11.setBackground(new java.awt.Color(204, 255, 255));
        jTextField11.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N

        jTextField7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton6.setText("...");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField11))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField6)
                                    .addComponent(jComboBox5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // Check if table has valid selected row
                int selectedRow = jTable1.getSelectedRow();
                if (selectedRow == -1) {
                    JOptionPane.showMessageDialog(null, "Vui lòng chọn một sản phẩm trước khi nhập hàng!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                try {
                    // Retrieve input data from the form fields
                    String maHoaDonString = jTextField6.getText().trim();
                    Map<String, String> mapNhanVien = new HashMap<>();
                    mapNhanVien.put("admin1", "1");
                    mapNhanVien.put("admin2", "2");

                    String tenNhanVien = (String) jComboBox5.getSelectedItem();
                    String maNhanVien = mapNhanVien.get(tenNhanVien);
                    String maKhachHang = jTextField7.getText().trim(); // Corrected this to use jTextField7
                    Timestamp ngayLapHoaDon = Timestamp.from(java.time.Instant.now()); // Current date
                    double tongTien = Double.parseDouble(jTextField8.getText().trim());
                    double tongTienPhaiTra = Double.parseDouble(jTextField11.getText().trim()); // Use the correct field for the total amount to pay

                    // Insert HoaDon
                    HoaDonDTO hoaDon = new HoaDonDTO(maHoaDonString, ngayLapHoaDon, maNhanVien, maKhachHang, tongTien, tongTienPhaiTra);
                    HoaDonDAO hoaDonDAO = HoaDonDAO.getInstance();
                    int result = hoaDonDAO.insert(hoaDon);

                    if (result > 0) {
                        // Insert product details into ChiTietHoaDon
                        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
                        for (int i = 0; i < model.getRowCount(); i++) {
                            String maSanPham = model.getValueAt(i, 1).toString();
                            int soLuong = Integer.parseInt(model.getValueAt(i, 6).toString());
                            double donGia = Double.parseDouble(model.getValueAt(i, 7).toString());
                            double Phaitra = Double.parseDouble(model.getValueAt(i, 8).toString());
                            String ram = model.getValueAt(i, 3).toString();
                            String rom = model.getValueAt(i, 4).toString();
                            String mauSac = model.getValueAt(i, 5).toString();

                            // Create ChiTietHoaDonDTO object
                            ChiTietHoaDonDTO chiTiet = new ChiTietHoaDonDTO(maHoaDonString, Integer.parseInt(maSanPham), soLuong, ram, rom, mauSac, donGia, donGia, Phaitra);
                            ChiTietHoaDonDAO chiTietHoaDonDAO = ChiTietHoaDonDAO.getInstance();
                            ArrayList<ChiTietHoaDonDTO> listChiTiet = new ArrayList<>();
                            listChiTiet.add(chiTiet);
                            SanPhamDAO sanPhamDAO = SanPhamDAO.getInstance();
                            SanPhamDTO sanPham = sanPhamDAO.selectById(maSanPham);
                            if (sanPham != null) {
                                int newSoLuong = sanPham.getSoLuong() - soLuong;
                                sanPham.setSoLuong(newSoLuong);
                                sanPhamDAO.update(sanPham);
                            }

                            int chiTietResult = chiTietHoaDonDAO.insert(listChiTiet);
                            if (chiTietResult <= 0) {
                                JOptionPane.showMessageDialog(null, "Có lỗi khi thêm sản phẩm vào chi tiết hóa đơn!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                                return;
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Hóa đơn đã được tạo thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Có lỗi khi tạo hóa đơn!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập đúng định dạng cho tất cả các trường!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Giá xuất");

        jTextField4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Số lượng");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Cấu hình");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Ram");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2GB", "4GB", "6GB", "8GB", "10GB", "12GB", "16GB", "32GB" }));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Rom");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "32GB", "64GB", "120GB", "240GB", "256GB", "500GB", "512GB", "1TB" }));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Màu sắc");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đỏ", "Xanh", "Đen", "Trắng", "Vàng" }));

        jTable2.setBackground(new java.awt.Color(204, 204, 204));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã SP", "Tên SP", "Ram", "Rom", "Màu sắc", "Số lượng", "Đơn giá", "Tổng trả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        jTable2.setDefaultEditor(Object.class, null);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 255));
        jButton4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Sửa sản phẩm");

        jButton5.setBackground(new java.awt.Color(255, 0, 204));
        jButton5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Xóa sản phẩm");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("Phần trăm giảm (%)");

        jTextField9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setText("Số Lượng Tồn ");

        jTextField10.setEditable(false);
        jTextField10.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPannelThemPhieuNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(44, 44, 44)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jComboBox2, 0, 145, Short.MAX_VALUE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(6, 6, 6)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGap(6, 6, 6)
                                                                .addComponent(jTextField10))
                                                            .addComponent(jLabel15)))))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 914, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JPannelThemPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(57, 57, 57))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTextField1.setText(" Nhập tên sản phẩm, mã sản phẩm");
        jTextField1.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            @Override
            public void focusGained(java.awt.event.FocusEvent evt) {
                if (jTextField1.getText().equals(" Nhập tên sản phẩm, mã sản phẩm")) {
                    jTextField1.setText("");
                    jTextField1.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(java.awt.event.FocusEvent evt) {
                if (jTextField1.getText().isEmpty()) {
                    jTextField1.setText(" Nhập tên sản phẩm, mã sản phẩm"); // Khôi phục lại placeholder khi user không nhập
                    jTextField1.setForeground(new java.awt.Color(153, 153, 153)); // Đổi màu placeholder thành xám
                }
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                int selectedRow = jTable1.getSelectedRow();
                if (selectedRow == -1) {
                    JOptionPane.showMessageDialog(null, "Vui lòng chọn một sản phẩm trước khi thêm!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                // Kiểm tra số lượng xuất
                int soLuongTon = Integer.parseInt(jTextField10.getText().trim()); // Số lượng tồn
                int soLuongXuat = 0;
                try {
                    soLuongXuat = Integer.parseInt(jTextField5.getText().trim()); // Số lượng xuất
                    if (soLuongXuat <= 0) {
                        JOptionPane.showMessageDialog(null, "Số lượng phải lớn hơn 0!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                    if (soLuongXuat > soLuongTon) {
                        JOptionPane.showMessageDialog(null, "Số lượng xuất không được lớn hơn số lượng tồn!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Số lượng phải là số nguyên hợp lệ!", "Lỗi nhập liệu", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                String maSanPham = jTextField2.getText();
                String tenSanPham = jTextField3.getText();
                String ram = (String) jComboBox1.getSelectedItem();
                String rom = (String) jComboBox2.getSelectedItem();
                String mauSac = (String) jComboBox3.getSelectedItem();

                // Kiểm tra phần trăm giảm giá
                double phanTramGiam = 0;
                try {
                    phanTramGiam = Double.parseDouble(jTextField9.getText().trim());
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Phần trăm giảm phải nhập là số hợp lệ!", "Lỗi nhập liệu", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Kiểm tra Đơn giá
                double donGia = 0;
                try {
                    String donGiaText = jTextField4.getText().trim();
                    if (donGiaText.contains(".") || donGiaText.contains(",")) {
                        JOptionPane.showMessageDialog(null, "Đơn giá không được có dấu '.' hoặc ',' khi nhập!", "Lỗi nhập liệu", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    donGia = Double.parseDouble(donGiaText);
                    if (donGia < 0) {
                        JOptionPane.showMessageDialog(null, "Đơn giá không hợp lệ!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Đơn giá phải là số hợp lệ!", "Lỗi nhập liệu", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Tính đơn giá sau khi giảm
                double donGiaSauGiam = donGia - (donGia * phanTramGiam / 100);

                // Thêm dữ liệu vào bảng
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
                model.addRow(new Object[]{
                    model.getRowCount() + 1,
                    maSanPham,
                    tenSanPham,
                    ram,
                    rom,
                    mauSac,
                    soLuongXuat,
                    donGia,
                    donGiaSauGiam
                });

                calculateTotal();
                calculateTotalFinal();

                // Có thể gọi phương thức lưu vào cơ sở dữ liệu (nếu cần) ở đây
                // Ví dụ: lưu thông tin vào database hoặc gọi thêm logic xử lý nếu cần.
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                int selectedRow = jTable2.getSelectedRow();
                if (selectedRow == -1) {
                    JOptionPane.showMessageDialog(null, "Vui lòng chọn một sản phẩm để sửa!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                String maSP = jTextField2.getText();
                String tenSP = jTextField3.getText();
                String ram = (String) jComboBox1.getSelectedItem();
                String rom = (String) jComboBox2.getSelectedItem();
                String mauSac = (String) jComboBox3.getSelectedItem();

                int soLuong;
                double donGia;

                try {
                    soLuong = Integer.parseInt(jTextField5.getText());
                    donGia = Double.parseDouble(jTextField4.getText());
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập số lượng và đơn giá hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
                model.setValueAt(maSP, selectedRow, 1);
                model.setValueAt(tenSP, selectedRow, 2);
                model.setValueAt(ram, selectedRow, 3);
                model.setValueAt(rom, selectedRow, 4);
                model.setValueAt(mauSac, selectedRow, 5);
                model.setValueAt(soLuong, selectedRow, 6);
                model.setValueAt(donGia, selectedRow, 7);

                JOptionPane.showMessageDialog(null, "Thông tin sản phẩm đã được sửa thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                int selectedRow = jTable2.getSelectedRow();
                if (selectedRow == -1) {
                    JOptionPane.showMessageDialog(null, "Vui lòng chọn một sản phẩm để xóa!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                } else {
                    int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa sản phẩm này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
                        model.removeRow(selectedRow);
                        calculateTotal();
                        calculateTotalFinal();
                    }
                }
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents
private boolean isErrorShown = false;
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
       String searchText = jTextField1.getText().trim().toLowerCase();
       if (searchText.isEmpty() || searchText.equals("nhập tên sản phẩm, mã sản phẩm")) {
           loadProductTable();
           return;
       }
       SanPhamBUS sanPhamBUS = new SanPhamBUS();
       ArrayList<SanPhamDTO> searchResults = sanPhamBUS.search(searchText); 
       if (searchResults.isEmpty() && !isErrorShown) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm nào!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            isErrorShown = true;
        } else {
            updateProductTable(searchResults);
            isErrorShown = false;
        }
    }//GEN-LAST:event_jTextField1ActionPerformed
    
    private void updateProductTable(ArrayList<SanPhamDTO> products) {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);
    for (SanPhamDTO sp : products) {
        model.addRow(new Object[]{sp.getMaSanPham(), sp.getTenSanPham(), sp.getSoLuong()});
    }
}
    private void autoGenerateMaPhieuNhap() {
    HoaDonDAO dao = HoaDonDAO.getInstance();
    String lastId = dao.getLastMaHoaDon();
    
    String newId;
    if (lastId != null && !lastId.isEmpty()) {
        int idNum = Integer.parseInt(lastId.replaceAll("[^0-9]", ""));
        newId = String.format("%d", idNum + 1);
    } else {
        newId = "1";
    }

    jTextField6.setText(newId);
    jTextField6.setEditable(false); // tránh sửa đổi tay
}
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Chọn file Excel");
    fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Excel Files", "xlsx"));

    int result = fileChooser.showOpenDialog(this);
    if (result == JFileChooser.APPROVE_OPTION) {
        File selectedFile = fileChooser.getSelectedFile();
        try (FileInputStream fis = new FileInputStream(selectedFile);
             Workbook workbook = new XSSFWorkbook(fis)) {

            Sheet sheet = workbook.getSheetAt(0);
            Iterator<Row> rowIterator = sheet.iterator();
            if (rowIterator.hasNext()) rowIterator.next();

            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            if (model.getColumnCount() == 0) {
                model.setColumnIdentifiers(new Object[]{
                    "STT", "Mã SP", "Tên SP", "RAM", "ROM", "Màu", "Số lượng", "Đơn giá","Tổng trả"
                });
            }

            while (rowIterator.hasNext()) {
                Row row = rowIterator.next();
                String maSP = row.getCell(0).getStringCellValue();
                String tenSP = row.getCell(1).getStringCellValue();
                String ram = row.getCell(2).getStringCellValue();
                String rom = row.getCell(3).getStringCellValue();
                String mau = row.getCell(4).getStringCellValue();
                int soLuong = (int) row.getCell(5).getNumericCellValue();
                double donGia = row.getCell(6).getNumericCellValue();
                double TongTra = row.getCell(7).getNumericCellValue();

                model.addRow(new Object[]{
                    model.getRowCount() + 1,
                    maSP, tenSP, ram, rom, mau, soLuong, donGia, TongTra
                });
                calculateTotal();
                calculateTotalFinal();
            }

            JOptionPane.showMessageDialog(this, "Đã nhập dữ liệu thành công!");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi đọc file Excel: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

    JDialog dialog = new JDialog((JFrame) null, "Tìm Khách Hàng", true);
    dialog.setSize(500, 350);
    dialog.setLocationRelativeTo(null);

    JTextField txtTimKiem = new JTextField(25);
    DefaultListModel<String> model = new DefaultListModel<>();
    JList<String> listKetQua = new JList<>(model);
    KhachHangBUS bus = new KhachHangBUS();
    ArrayList<KhachHangDTO> danhSach = bus.getDanhSachKhachHang();
    Runnable filter = () -> {
        String keyword = txtTimKiem.getText().trim().toLowerCase();
        model.clear();
        for (KhachHangDTO kh : danhSach) {
            String display = kh.toString();
            if (String.valueOf(kh.getMaKhachHang()).contains(keyword) ||
                kh.getHoTenKhachHang().toLowerCase().contains(keyword)) {
                model.addElement(display);
            }
        }
    };
    filter.run();
    txtTimKiem.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
        public void insertUpdate(javax.swing.event.DocumentEvent e) { filter.run(); }
        public void removeUpdate(javax.swing.event.DocumentEvent e) { filter.run(); }
        public void changedUpdate(javax.swing.event.DocumentEvent e) { filter.run(); }
    });
    listKetQua.addListSelectionListener(e -> {
        if (!e.getValueIsAdjusting() && listKetQua.getSelectedValue() != null) {
            String selected = listKetQua.getSelectedValue();
            String[] parts = selected.split(" - ");
            if (parts.length > 0) {
                jTextField7.setText(parts[0].trim());
            }
            dialog.dispose();
        }
    });
    JPanel panelTop = new JPanel();
    panelTop.add(new JLabel("Tìm kiếm:"));
    panelTop.add(txtTimKiem);
    dialog.setLayout(new BorderLayout());
    dialog.add(panelTop, BorderLayout.NORTH);
    dialog.add(new JScrollPane(listKetQua), BorderLayout.CENTER);
    dialog.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void loadProductTable() {
    SanPhamBUS sanPhamBUS = new SanPhamBUS();
    ArrayList<SanPhamDTO> listSP = sanPhamBUS.getAll();

    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Xóa dữ liệu cũ

    for (SanPhamDTO sp : listSP) {
        model.addRow(new Object[]{sp.getMaSanPham(), sp.getTenSanPham(), sp.getSoLuong()});
    }
}
    private void calculateTotal() {
    double totalAmount = 0;
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    for (int i = 0; i < model.getRowCount(); i++) {
        int soLuong = (int) model.getValueAt(i, 6);
        double donGia = (double) model.getValueAt(i, 7);
        totalAmount += soLuong * donGia;
    }
    jTextField8.setText(String.format("%.0f", totalAmount));
}   
    private void calculateTotalFinal() {
    double totalAmount = 0;
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    for (int i = 0; i < model.getRowCount(); i++) {
        int soLuong = (int) model.getValueAt(i, 6);
        double donGia = (double) model.getValueAt(i, 8);
        totalAmount += soLuong * donGia;
    }
    jTextField11.setText(String.format("%.0f", totalAmount));
}


    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {                                     
    int row = jTable2.getSelectedRow();
    if (row >= 0) {
        String maSP = jTable2.getValueAt(row, 1).toString();
        String tenSP = jTable2.getValueAt(row, 2).toString();
        String ram = jTable2.getValueAt(row, 3).toString();
        String rom = jTable2.getValueAt(row, 4).toString();
        String mauSac = jTable2.getValueAt(row, 5).toString();
        int soLuong = (int) jTable2.getValueAt(row, 6);
        double donGia = (double) jTable2.getValueAt(row, 7);
        String formattedDonGia = String.format("%.0f", donGia);

        // Cập nhật các JTextField
        jTextField2.setText(maSP); 
        jTextField3.setText(tenSP);
        jComboBox1.setSelectedItem(ram); 
        jComboBox2.setSelectedItem(rom); 
        jComboBox3.setSelectedItem(mauSac);
        jTextField5.setText(String.valueOf(soLuong));
        jTextField4.setText(formattedDonGia);
    }
}



private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {                                     
    int row = jTable1.getSelectedRow(); 
    if (row >= 0) {
        int maSanPham = (int) jTable1.getValueAt(row, 0);
        SanPhamBUS sanPhamBUS = new SanPhamBUS();
        SanPhamDTO selectedProduct = sanPhamBUS.getByMaSP(maSanPham); 
        if (selectedProduct != null) {
            jTextField2.setText(String.valueOf(selectedProduct.getMaSanPham())); 
            jTextField3.setText(selectedProduct.getTenSanPham());
            ChiTietSanPhamBUS chiTietBUS = new ChiTietSanPhamBUS();
            ArrayList<ChiTietSanPhamDTO> chiTietList = chiTietBUS.getAllCTSPbyMasp(maSanPham);

            if (!chiTietList.isEmpty()) {
                ChiTietSanPhamDTO chiTiet = chiTietList.get(0);
                jComboBox1.setSelectedItem(chiTiet.getRam()); 
                jComboBox2.setSelectedItem(chiTiet.getRom());
                jComboBox3.setSelectedItem(chiTiet.getMauSac());
                BigDecimal donGia = selectedProduct.getDonGia();
                BigDecimal donGiaXuat = donGia.add(donGia.multiply(new BigDecimal("0.10")));
                String formattedDonGia = donGiaXuat.setScale(0, RoundingMode.HALF_UP).toString();
                
                jTextField4.setText(formattedDonGia);
                jTextField5.setText("1");
                jTextField10.setText(String.valueOf(selectedProduct.getSoLuong()));
            }
        }
    }
}





    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemPhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemPhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemPhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemPhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThemHoaDon_1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPannelThemPhieuNhap;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
